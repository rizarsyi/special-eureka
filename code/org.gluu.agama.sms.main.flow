// Start the excecution of the main flow
Flow org.gluu.agama.sms.main
     Basepath ""
     Configs conf
// Create variable to receive validation result.
validationResult = {}
// Get an instance of OTPService Class. 
otpService = Call org.gluu.agama.sms.OTPService#getInstance conf
// Iterate x times maximum.
count = Repeat 3 times max
     // Retrieve user credentials from UI.
     credentials = RRF "login.ftlh" validationResult
     // Log the successfull  used credentials retrieval.
     Log "@info Log the successfull  used credentials retrieval."
     // Validate provided user credentials.
     validationResult.status = Call otpService validateCreds credentials.username credentials.password
     // If user credentials is valid
     When validationResult.status is true
          // add entry in log file for successfull login attempt.
          Log "@info Valid credentials provided for user: " credentials.username
          // Generate and send OTP code to authenticated user.
          maskedPhone = Call otpService sendOTPCode credentials.username
          // Assign username variable.
          username = credentials.username
          // The OTP Code has been send to user.
          Log "@info OTP generated and send to: " maskedPhone
          // Trigger OTP subflow
          otpFeedBack | otpException = Trigger org.gluu.agama.sms.otp otpService username maskedPhone
          // OTP Code validation is completed.
          Log "@info OTP Code validation completed with status: " otpFeedBack
          // Check if OTP validation vas okay
          When otpFeedBack.success is true
               // The main flow has completed successfully.
               it_knult = {success:true, data: { userId: credentials.username}}
               Finish it_knult
          // Closing the main flow with error.
          it_wnfrb = {success:false, error: "The flow has been completed with error."}
          Finish it_wnfrb
     // Invalid credentials provided.
     Log "@error Invalid credentials provided."
     // Provide feedback about the error message to user.
     validationResult.errorMessage = "The provided credentials are not valid. Please try again!"
// Maximum attempts reached. Password validation failed!
Log "@info Maximum attempts reached. Password validation failed!"
// Maximum attempts reached. Password validation failed!
it_rknrg = {success:false, error: "Password validation failed!"}
Finish it_rknrg